openapi: 3.0.0
info:
  title: E-commerce API
  description: API for managing users, products, cart, and authentication in an e-commerce platform.
  version: 1.0.0
  contact:
    name: Thaissa Carvalho
    email: thaissa.dos2003@outlook.com
    url: https://bythaissa.com
servers:
  - url: 'http://localhost:5000/api'
    description: Local server

paths:
  /users/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - Users
      requestBody:
        description: User registration data
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /users/{id}:
    get:
      summary: Get user by ID
      operationId: findUserById
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 12345
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: john.doe@example.com
        '404':
          description: User not found
        '500':
          description: Internal server error

  /users/update:
    patch:
      summary: Update user details
      operationId: updateUser
      tags:
        - Users
      requestBody:
        description: User update data
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: newpassword123
      responses:
        '200':
          description: User successfully updated
        '400':
          description: Invalid input data
        '404':
          description: User not found
        '500':
          description: Internal server error

  /users/delete:
    delete:
      summary: Delete a user
      operationId: deleteUser
      tags:
        - Users
      responses:
        '200':
          description: User successfully deleted
        '404':
          description: User not found
        '500':
          description: Internal server error

  /products/all:
    get:
      summary: Get all products
      operationId: getProducts
      tags:
        - Products
      responses:
        '200':
          description: List of all products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 6789
                    name:
                      type: string
                      example: Product Name
                    description:
                      type: string
                      example: Product Description
                    price:
                      type: number
                      format: float
                      example: 99.99
                    stock:
                      type: integer
                      example: 100
        '500':
          description: Internal server error

  /products/register:
    post:
      summary: Register a new product
      operationId: addProduct
      tags:
        - Products
      requestBody:
        description: Product data
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - price
                - stock
                - category
              properties:
                name:
                  type: string
                  example: New Product
                description:
                  type: string
                  example: This is a new product.
                price:
                  type: number
                  format: float
                  example: 49.99
                stock:
                  type: integer
                  example: 100
                category:
                  type: string
                  example: Electronics
                imageUrl:
                  type: string
                  example: 'https://example.com/product.jpg'
      responses:
        '201':
          description: Product successfully added
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /products/{id}:
    get:
      summary: Get product by ID
      operationId: getProductById
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Successfully retrieved product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 6789
                  name:
                    type: string
                    example: Product Name
                  description:
                    type: string
                    example: Product Description
                  price:
                    type: number
                    format: float
                    example: 99.99
                  stock:
                    type: integer
                    example: 100
        '404':
          description: Product not found
        '500':
          description: Internal server error

  /products/edit/{id}:
    patch:
      summary: Update product details
      operationId: updateProduct
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        description: Product update data
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Updated Product Name
                description:
                  type: string
                  example: Updated description
                price:
                  type: number
                  format: float
                  example: 79.99
                stock:
                  type: integer
                  example: 200
      responses:
        '200':
          description: Product successfully updated
        '400':
          description: Invalid input data
        '404':
          description: Product not found
        '500':
          description: Internal server error

  /products/delete/{id}:
    delete:
      summary: Delete a product
      operationId: deleteProduct
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Product successfully deleted
        '404':
          description: Product not found
        '500':
          description: Internal server error

  /cart/carts:
    get:
      summary: Get all carts
      operationId: getCart
      tags:
        - Cart
      responses:
        '200':
          description: List of all carts
        '500':
          description: Internal server error

  /cart/{userId}:
    get:
      summary: Get cart by user ID
      operationId: getCartByUserId
      tags:
        - Cart
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Successfully retrieved cart
        '404':
          description: Cart not found
        '500':
          description: Internal server error

  /cart/add-item:
    post:
      summary: Add item to cart
      operationId: addItemToCart
      tags:
        - Cart
      requestBody:
        description: Cart item data
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - productId
                - quantity
              properties:
                userId:
                  type: string
                  example: '12345'
                productId:
                  type: string
                  example: '6789'
                quantity:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Item successfully added to cart
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /cart/create-cart:
    post:
      summary: Create a new cart
      operationId: createCart
      tags:
        - Cart
      requestBody:
        description: Cart creation data
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  example: '12345'
      responses:
        '201':
          description: Cart successfully created
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /cart/edit-cart-item:
    patch:
      summary: Update cart item
      operationId: updateCartItem
      tags:
        - Cart
      requestBody:
        description: Cart item update data
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - productId
                - quantity
              properties:
                userId:
                  type: string
                  example: '12345'
                productId:
                  type: string
                  example: '6789'
                quantity:
                  type: integer
                  example: 3
      responses:
        '200':
          description: Cart item successfully updated
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /cart/clear-cart/{userId}:
    delete:
      summary: Clear user's cart
      operationId: clearCart
      tags:
        - Cart
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Cart successfully cleared
        '404':
          description: Cart not found
        '500':
          description: Internal server error
  /auth/login:
    post:
      summary: Log in a user
      operationId: login
      tags:
        - Auth
      requestBody:
        description: Login credentials (email and password)
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                usernameOrEmail:
                  type: string
                  example: 'johndoe@example.com'
                password:
                  type: string
                  example: 'password123'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'jwt.token.here'
        '400':
          description: Invalid credentials
        '500':
          description: Internal server error
